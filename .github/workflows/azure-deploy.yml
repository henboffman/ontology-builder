name: Build and Deploy to Azure

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  AZURE_WEBAPP_NAME: 'eidos'
  AZURE_WEBAPP_PACKAGE_PATH: './onto-editor/eidos'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/Eidos.csproj

    - name: Build
      run: dotnet build ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/Eidos.csproj --configuration Release --no-restore

    - name: Run tests
      run: |
        if [ -f "Eidos.Tests/Eidos.Tests.csproj" ]; then
          dotnet test Eidos.Tests/Eidos.Tests.csproj --no-restore --verbosity normal --logger "trx;LogFileName=test-results.trx"
        else
          echo "No test project found, skipping tests"
        fi
      continue-on-error: true

    - name: Publish
      if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
      run: dotnet publish ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/Eidos.csproj --configuration Release --output ./publish

    - name: Upload artifact for deployment job
      if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-app
        path: ./publish

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: build-and-test
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: dotnet-app
        path: ./publish

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ./publish

    - name: Wait for deployment to stabilize
      run: sleep 30

    - name: Validate deployment - Health check
      run: |
        echo "üîç Checking health endpoint..."
        response=$(curl -s -o /dev/null -w "%{http_code}" https://eidosonto.com/health)
        if [ "$response" -eq 200 ]; then
          echo "‚úÖ Health check passed (HTTP $response)"
        else
          echo "‚ùå Health check failed (HTTP $response)"
          exit 1
        fi

    - name: Validate deployment - Homepage
      run: |
        echo "üîç Checking homepage..."
        response=$(curl -s -w "%{http_code}" https://eidosonto.com -o /tmp/homepage.html)
        if [ "$response" -eq 200 ]; then
          echo "‚úÖ Homepage accessible (HTTP $response)"
          # Check for expected content
          if grep -q "Eidos" /tmp/homepage.html; then
            echo "‚úÖ Homepage contains expected content"
          else
            echo "‚ùå Homepage missing expected content"
            exit 1
          fi
        else
          echo "‚ùå Homepage check failed (HTTP $response)"
          exit 1
        fi

    - name: Validate deployment - Release notes
      run: |
        echo "üîç Checking release notes page..."
        response=$(curl -s -o /dev/null -w "%{http_code}" https://eidosonto.com/release-notes)
        if [ "$response" -eq 200 ]; then
          echo "‚úÖ Release notes page accessible (HTTP $response)"
        else
          echo "‚ùå Release notes check failed (HTTP $response)"
          exit 1
        fi

    - name: Deployment summary
      run: |
        echo "‚úÖ Deployment to Azure completed successfully"
        echo "‚úÖ All validation tests passed"
        echo "üåê Site URL: https://eidosonto.com"
        echo "üè• Health: https://eidosonto.com/health"
        echo "üì¶ Deployment ID: ${{ github.run_id }}"
        echo "üîñ Commit SHA: ${{ github.sha }}"
