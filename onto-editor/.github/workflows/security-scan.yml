name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Monday at 6 AM UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:

jobs:
  dependency-scan:
    name: Vulnerability Scan - Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore onto-editor/eidos/Eidos.csproj

      - name: Check for vulnerable packages
        run: |
          echo "Scanning for vulnerable NuGet packages..."
          dotnet list onto-editor/eidos/Eidos.csproj package --vulnerable --include-transitive > vulnerability-report.txt 2>&1 || true
          cat vulnerability-report.txt

          # Fail if vulnerabilities found (excluding warnings)
          if grep -q "has the following vulnerable packages" vulnerability-report.txt; then
            echo "‚ùå VULNERABLE PACKAGES DETECTED!"
            exit 1
          else
            echo "‚úÖ No vulnerable packages found"
          fi

      - name: Upload vulnerability report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-report
          path: vulnerability-report.txt

  code-analysis:
    name: Security Scan - Code Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Add Security Code Scan
        run: dotnet add onto-editor/eidos/Eidos.csproj package SecurityCodeScan.VS2019

      - name: Build with security analysis
        run: dotnet build onto-editor/eidos/Eidos.csproj --configuration Release /p:TreatWarningsAsErrors=false

  zap-scan:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    # Only run on schedule or manual trigger to avoid excessive scans
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'https://eidosonto.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -j'
          issue_title: 'OWASP ZAP Security Scan Results'
          fail_action: false  # Don't fail build, just report

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-analysis]
    if: always()

    steps:
      - name: Security Scan Complete
        run: |
          echo "üîí Security scan completed"
          echo "Results:"
          echo "- Dependency scan: ${{ needs.dependency-scan.result }}"
          echo "- Code analysis: ${{ needs.code-analysis.result }}"
